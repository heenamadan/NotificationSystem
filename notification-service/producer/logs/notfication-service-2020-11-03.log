[2020-11-02_11:51:49.512 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_11:51:49.515 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_11:51:49.534 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms]
[2020-11-02_11:52:32.946 | [http-nio-8082-exec-4] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_11:52:33.012 | [http-nio-8082-exec-4] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_11:52:33.013 | [http-nio-8082-exec-4] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_11:52:33.013 | [http-nio-8082-exec-4] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_11:52:33.013 | [http-nio-8082-exec-4] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:18:58.656 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceIntegrationTest], using SpringBootContextLoader]
[2020-11-02_14:18:58.666 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceIntegrationTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_14:18:58.867 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_14:18:58.982 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@25d70e72, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@68934b7b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c3ed1c2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1832d919, org.springframework.test.context.support.DirtiesContextTestExecutionListener@50bf0f3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7731abba, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d1bc45f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@63ef22f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3939ca12, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@432fdaf4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@70a5d7f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a47b390]]
[2020-11-02_14:18:59.294 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | Starting NotificationServiceIntegrationTest on LAPTOP-L3JPKBK3 with PID 19228 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_14:18:59.296 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | No active profile set, falling back to default profiles: default]
[2020-11-02_14:18:59.316 | [Test worker] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6601c02b: startup date [Mon Nov 02 14:18:59 IST 2020]; root of context hierarchy]
[2020-11-02_14:19:00.341 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:19:00.342 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:19:00.685 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:19:00.721 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:19:01.286 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$43a7dd24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_14:19:01.640 | [Test worker] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 0 (http)]
[2020-11-02_14:19:01.657 | [Test worker] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-auto-1"]]
[2020-11-02_14:19:01.670 | [Test worker] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_14:19:01.671 | [Test worker] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_14:19:01.684 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_14:19:01.858 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_14:19:01.859 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2546 ms]
[2020-11-02_14:19:03.011 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:19:03.093 | [cluster-ClusterId{value='5f9fc7ff5155674b1cdb24b1', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:37}] to 127.0.0.1:27017]
[2020-11-02_14:19:03.098 | [cluster-ClusterId{value='5f9fc7ff5155674b1cdb24b1', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2887300}]
[2020-11-02_14:19:03.835 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_14:19:03.836 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_14:19:03.836 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_14:19:03.836 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_14:19:03.837 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean | Mapping filter: 'springSecurityFilterChain' to: [/*]]
[2020-11-02_14:19:03.837 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_14:19:03.837 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_14:19:03.837 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_14:19:04.460 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_14:19:04.461 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_14:19:04.462 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_14:19:04.464 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_14:19:04.464 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_14:19:04.467 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[GET]}" onto public void com.target.notification.web.NotificationViewController.notify(com.target.notification.model.ChannelType)]
[2020-11-02_14:19:04.467 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationViewController.getAllMessages()]
[2020-11-02_14:19:04.468 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:19:04.471 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_14:19:04.471 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_14:19:04.473 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_14:19:04.476 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:19:04.477 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:19:04.581 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:19:04.582 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:19:04.584 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:19:04.901 | [Test worker] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet '']
[2020-11-02_14:19:04.901 | [Test worker] | INFO  | org.springframework.test.web.servlet.TestDispatcherServlet | FrameworkServlet '': initialization started]
[2020-11-02_14:19:04.958 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:19:04.959 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:19:05.011 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:19:05.391 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6601c02b: startup date [Mon Nov 02 14:18:59 IST 2020]; root of context hierarchy]
[2020-11-02_14:19:05.522 | [Test worker] | INFO  | org.springframework.test.web.servlet.TestDispatcherServlet | FrameworkServlet '': initialization completed in 620 ms]
[2020-11-02_14:19:05.921 | [Test worker] | INFO  | org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration | 

Using generated security password: 1d14af19-8216-43a9-a1eb-410dd75e1618
]
[2020-11-02_14:19:06.166 | [Test worker] | INFO  | org.springframework.security.web.DefaultSecurityFilterChain | Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2bac38ef, org.springframework.security.web.context.SecurityContextPersistenceFilter@40000e56, org.springframework.security.web.header.HeaderWriterFilter@5c33b178, org.springframework.security.web.csrf.CsrfFilter@731921d0, org.springframework.security.web.authentication.logout.LogoutFilter@30fa9c7e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@10ee965, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5777f467, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@77be62b5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64177943, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@758b56e2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@33ac3d71, org.springframework.security.web.session.SessionManagementFilter@224bcb8f, org.springframework.security.web.access.ExceptionTranslationFilter@6524dd4e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@39aee1fa]]
[2020-11-02_14:19:06.260 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:19:06.293 | [cluster-ClusterId{value='5f9fc8025155674b1cdb24b2', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:38}] to localhost:27017]
[2020-11-02_14:19:06.294 | [cluster-ClusterId{value='5f9fc8025155674b1cdb24b2', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=878200}]
[2020-11-02_14:19:07.357 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_14:19:07.480 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_14:19:07.481 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:19:07.800 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_14:19:07.800 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_14:19:07.801 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_14:19:07.842 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_14:19:07.890 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_14:19:08.119 | [Test worker] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-auto-1"]]
[2020-11-02_14:19:08.122 | [Test worker] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_14:19:08.140 | [Test worker] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 65027 (http) with context path '']
[2020-11-02_14:19:08.146 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | Started NotificationServiceIntegrationTest in 9.129 seconds (JVM running for 10.72)]
[2020-11-02_14:19:08.452 | [Thread-9] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6601c02b: startup date [Mon Nov 02 14:18:59 IST 2020]; root of context hierarchy]
[2020-11-02_14:19:08.455 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_14:19:08.455 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_14:19:08.456 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_14:19:40.686 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 8996 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_14:19:40.691 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_14:19:40.729 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ab778a: startup date [Mon Nov 02 14:19:40 IST 2020]; root of context hierarchy]
[2020-11-02_14:19:41.665 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:19:41.666 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:19:42.029 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:19:42.053 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:19:42.609 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$6003b042] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_14:19:43.142 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_14:19:43.156 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:19:43.165 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_14:19:43.166 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_14:19:43.175 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_14:19:43.320 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_14:19:43.320 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2593 ms]
[2020-11-02_14:19:44.440 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:19:44.510 | [cluster-ClusterId{value='5f9fc828515567232495ef92', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:39}] to 127.0.0.1:27017]
[2020-11-02_14:19:44.514 | [cluster-ClusterId{value='5f9fc828515567232495ef92', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2423600}]
[2020-11-02_14:19:45.229 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_14:19:45.229 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_14:19:45.229 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_14:19:45.230 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_14:19:45.230 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean | Mapping filter: 'springSecurityFilterChain' to: [/*]]
[2020-11-02_14:19:45.230 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_14:19:45.230 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_14:19:45.231 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_14:19:45.764 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_14:19:45.765 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_14:19:45.765 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_14:19:45.769 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_14:19:45.769 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_14:19:45.772 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[GET]}" onto public void com.target.notification.web.NotificationViewController.notify(com.target.notification.model.ChannelType)]
[2020-11-02_14:19:45.772 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationViewController.getAllMessages()]
[2020-11-02_14:19:45.773 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:19:45.776 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_14:19:45.777 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_14:19:45.778 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_14:19:45.781 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:19:45.782 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:19:45.891 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:19:45.892 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:19:45.894 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:19:46.259 | [main] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:19:46.273 | [cluster-ClusterId{value='5f9fc82a515567232495ef93', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:40}] to localhost:27017]
[2020-11-02_14:19:46.274 | [cluster-ClusterId{value='5f9fc82a515567232495ef93', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=692900}]
[2020-11-02_14:19:46.505 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ab778a: startup date [Mon Nov 02 14:19:40 IST 2020]; root of context hierarchy]
[2020-11-02_14:19:46.587 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:19:46.587 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:19:46.636 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:19:47.180 | [main] | INFO  | org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration | 

Using generated security password: d02415b9-d2d9-4760-82b3-c5c437efd93b
]
[2020-11-02_14:19:47.370 | [main] | INFO  | org.springframework.security.web.DefaultSecurityFilterChain | Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17ec335a, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d130ac4, org.springframework.security.web.header.HeaderWriterFilter@70b48eb3, org.springframework.security.web.csrf.CsrfFilter@6842c101, org.springframework.security.web.authentication.logout.LogoutFilter@27898e13, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4a22e4d7, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2484dbb7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@37e7c4cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@194012a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74a820bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@284990de, org.springframework.security.web.session.SessionManagementFilter@a91119b, org.springframework.security.web.access.ExceptionTranslationFilter@3cb6e0ee, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ee40b5c]]
[2020-11-02_14:19:47.453 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_14:19:47.650 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_14:19:47.708 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_14:19:47.708 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:19:47.938 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_14:19:47.938 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_14:19:47.938 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_14:19:47.969 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_14:19:48.009 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_14:19:48.198 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:19:48.200 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_14:19:48.217 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_14:19:48.222 | [main] | INFO  | com.target.notification.Main | Started Main in 7.784 seconds (JVM running for 8.466)]
[2020-11-02_14:19:55.300 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_14:19:55.301 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_14:19:55.320 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms]
[2020-11-02_14:23:30.100 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 13936 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_14:23:30.104 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_14:23:30.142 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1757cd72: startup date [Mon Nov 02 14:23:30 IST 2020]; root of context hierarchy]
[2020-11-02_14:23:31.069 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:23:31.070 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:23:31.410 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:23:31.428 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:23:31.881 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$dc0a3479] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_14:23:32.391 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_14:23:32.404 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:23:32.414 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_14:23:32.414 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_14:23:32.424 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_14:23:32.560 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_14:23:32.560 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2420 ms]
[2020-11-02_14:23:33.645 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:23:33.704 | [cluster-ClusterId{value='5f9fc90d51556736706d3011', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:41}] to 127.0.0.1:27017]
[2020-11-02_14:23:33.708 | [cluster-ClusterId{value='5f9fc90d51556736706d3011', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2267000}]
[2020-11-02_14:23:34.429 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_14:23:34.429 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_14:23:34.429 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_14:23:34.429 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_14:23:34.430 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean | Mapping filter: 'springSecurityFilterChain' to: [/*]]
[2020-11-02_14:23:34.430 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_14:23:34.430 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_14:23:34.430 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_14:23:34.941 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_14:23:34.942 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_14:23:34.943 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_14:23:34.948 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_14:23:34.963 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_14:23:34.964 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_14:23:34.965 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:23:34.969 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_14:23:34.970 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_14:23:34.970 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_14:23:34.973 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:23:34.973 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:23:35.077 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:23:35.079 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:23:35.080 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:23:35.425 | [main] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:23:35.431 | [cluster-ClusterId{value='5f9fc90f51556736706d3012', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:42}] to localhost:27017]
[2020-11-02_14:23:35.432 | [cluster-ClusterId{value='5f9fc90f51556736706d3012', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=697100}]
[2020-11-02_14:23:35.665 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1757cd72: startup date [Mon Nov 02 14:23:30 IST 2020]; root of context hierarchy]
[2020-11-02_14:23:35.732 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:23:35.732 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:23:35.779 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:23:36.336 | [main] | INFO  | org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration | 

Using generated security password: 2a06c4be-e8d1-48c3-be97-ac9cc9a6eb5c
]
[2020-11-02_14:23:36.511 | [main] | INFO  | org.springframework.security.web.DefaultSecurityFilterChain | Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7eb27768, org.springframework.security.web.context.SecurityContextPersistenceFilter@234cd86c, org.springframework.security.web.header.HeaderWriterFilter@272778ae, org.springframework.security.web.csrf.CsrfFilter@78d73b1b, org.springframework.security.web.authentication.logout.LogoutFilter@3cb6e0ee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@33324c05, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1373e3ee, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5ca4dce5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39c87b42, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@571a663c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6169be09, org.springframework.security.web.session.SessionManagementFilter@3c18942, org.springframework.security.web.access.ExceptionTranslationFilter@6c4ce583, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cbf1997]]
[2020-11-02_14:23:36.595 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_14:23:36.766 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_14:23:36.827 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_14:23:36.827 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:23:37.040 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_14:23:37.040 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_14:23:37.040 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_14:23:37.064 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_14:23:37.107 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_14:23:37.280 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:23:37.281 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_14:23:37.296 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_14:23:37.300 | [main] | INFO  | com.target.notification.Main | Started Main in 7.453 seconds (JVM running for 8.115)]
[2020-11-02_14:23:47.052 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_14:23:47.052 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_14:23:47.073 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms]
[2020-11-02_14:26:56.158 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 16896 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_14:26:56.163 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_14:26:56.201 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e377400: startup date [Mon Nov 02 14:26:56 IST 2020]; root of context hierarchy]
[2020-11-02_14:26:57.188 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:26:57.189 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:26:57.572 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:26:57.594 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:26:58.103 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3a314d32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_14:26:58.796 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_14:26:58.811 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:26:58.824 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_14:26:58.825 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_14:26:58.836 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_14:26:59.017 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_14:26:59.017 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2818 ms]
[2020-11-02_14:27:00.293 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:27:00.361 | [cluster-ClusterId{value='5f9fc9dc5155674200e1866a', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:43}] to 127.0.0.1:27017]
[2020-11-02_14:27:00.365 | [cluster-ClusterId{value='5f9fc9dc5155674200e1866a', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2302200}]
[2020-11-02_14:27:01.132 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_14:27:01.132 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_14:27:01.133 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_14:27:01.133 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_14:27:01.133 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean | Mapping filter: 'springSecurityFilterChain' to: [/*]]
[2020-11-02_14:27:01.133 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_14:27:01.134 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_14:27:01.134 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_14:27:01.692 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_14:27:01.693 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_14:27:01.693 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_14:27:01.697 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_14:27:01.698 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_14:27:01.699 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:27:01.704 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_14:27:01.705 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_14:27:01.706 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_14:27:01.711 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:27:01.712 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:27:01.824 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:27:01.825 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:27:01.827 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:27:02.158 | [main] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:27:02.163 | [cluster-ClusterId{value='5f9fc9de5155674200e1866b', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:44}] to localhost:27017]
[2020-11-02_14:27:02.164 | [cluster-ClusterId{value='5f9fc9de5155674200e1866b', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=580400}]
[2020-11-02_14:27:02.431 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e377400: startup date [Mon Nov 02 14:26:56 IST 2020]; root of context hierarchy]
[2020-11-02_14:27:02.524 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:27:02.525 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:27:02.571 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:27:03.178 | [main] | INFO  | org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration | 

Using generated security password: cf2a5f62-b6d8-4291-814c-1201a63b6cd4
]
[2020-11-02_14:27:03.415 | [main] | INFO  | org.springframework.security.web.DefaultSecurityFilterChain | Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33eb0d4, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c4ce583, org.springframework.security.web.header.HeaderWriterFilter@39d77de9, org.springframework.security.web.csrf.CsrfFilter@539c4830, org.springframework.security.web.authentication.logout.LogoutFilter@571a663c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5396eeb1, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@120aa40b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@584ca390, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29bbc63c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@47fcefb3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@224d86d2, org.springframework.security.web.session.SessionManagementFilter@2c06b113, org.springframework.security.web.access.ExceptionTranslationFilter@4652c74d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@57cabdc3]]
[2020-11-02_14:27:03.516 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_14:27:03.728 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_14:27:03.825 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_14:27:03.825 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:27:04.071 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_14:27:04.071 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_14:27:04.071 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_14:27:04.100 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_14:27:04.144 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_14:27:04.331 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:27:04.332 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_14:27:04.348 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_14:27:04.353 | [main] | INFO  | com.target.notification.Main | Started Main in 8.444 seconds (JVM running for 9.139)]
[2020-11-02_14:27:15.716 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_14:27:15.716 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_14:27:15.738 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms]
[2020-11-02_14:34:40.500 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 2060 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_14:34:40.505 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_14:34:40.541 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63070bab: startup date [Mon Nov 02 14:34:40 IST 2020]; root of context hierarchy]
[2020-11-02_14:34:41.505 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:34:41.505 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:34:41.868 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:34:41.890 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:34:42.364 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$fb2ea610] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_14:34:42.884 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_14:34:42.899 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:34:42.909 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_14:34:42.910 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_14:34:42.920 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_14:34:43.057 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_14:34:43.058 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2519 ms]
[2020-11-02_14:34:44.167 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:34:44.226 | [cluster-ClusterId{value='5f9fcbac515567080c6dfe72', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:45}] to 127.0.0.1:27017]
[2020-11-02_14:34:44.229 | [cluster-ClusterId{value='5f9fcbac515567080c6dfe72', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2304200}]
[2020-11-02_14:34:44.916 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_14:34:44.916 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_14:34:44.916 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_14:34:44.916 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_14:34:44.917 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean | Mapping filter: 'springSecurityFilterChain' to: [/*]]
[2020-11-02_14:34:44.917 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_14:34:44.917 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_14:34:44.917 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_14:34:45.460 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_14:34:45.461 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_14:34:45.462 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_14:34:45.467 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_14:34:45.467 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_14:34:45.469 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:34:45.473 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_14:34:45.474 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_14:34:45.476 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_14:34:45.481 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:34:45.481 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:34:45.602 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:34:45.604 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:34:45.605 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:34:45.913 | [main] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:34:45.919 | [cluster-ClusterId{value='5f9fcbad515567080c6dfe73', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:46}] to localhost:27017]
[2020-11-02_14:34:45.920 | [cluster-ClusterId{value='5f9fcbad515567080c6dfe73', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1011200}]
[2020-11-02_14:34:46.177 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63070bab: startup date [Mon Nov 02 14:34:40 IST 2020]; root of context hierarchy]
[2020-11-02_14:34:46.259 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:34:46.259 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:34:46.311 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:34:46.851 | [main] | INFO  | org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration | 

Using generated security password: 9d07d606-d456-4c81-8304-f3a18218437a
]
[2020-11-02_14:34:47.036 | [main] | INFO  | org.springframework.security.web.DefaultSecurityFilterChain | Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d8835af, org.springframework.security.web.context.SecurityContextPersistenceFilter@451e2fa9, org.springframework.security.web.header.HeaderWriterFilter@3a788fe0, org.springframework.security.web.csrf.CsrfFilter@2c06b113, org.springframework.security.web.authentication.logout.LogoutFilter@64279ab, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5c448ef, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@60591e1b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6885ed19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3cb6e0ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f0ccb34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16681017, org.springframework.security.web.session.SessionManagementFilter@1373e3ee, org.springframework.security.web.access.ExceptionTranslationFilter@78b03788, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2aea717c]]
[2020-11-02_14:34:47.115 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_14:34:47.323 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_14:34:47.382 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_14:34:47.382 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:34:47.606 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_14:34:47.607 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_14:34:47.607 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_14:34:47.634 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_14:34:47.677 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_14:34:47.850 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:34:47.851 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_14:34:47.865 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_14:34:47.870 | [main] | INFO  | com.target.notification.Main | Started Main in 7.617 seconds (JVM running for 8.287)]
[2020-11-02_14:35:04.028 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_14:35:04.028 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_14:35:04.052 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms]
[2020-11-02_14:39:33.928 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 19432 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_14:39:33.933 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_14:39:33.970 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@445b295b: startup date [Mon Nov 02 14:39:33 IST 2020]; root of context hierarchy]
[2020-11-02_14:39:34.915 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:39:34.916 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:39:35.257 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:39:35.279 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:39:35.809 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$424e5185] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_14:39:36.330 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_14:39:36.343 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:39:36.353 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_14:39:36.354 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_14:39:36.364 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_14:39:36.499 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_14:39:36.499 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2531 ms]
[2020-11-02_14:39:37.602 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_14:39:37.663 | [cluster-ClusterId{value='5f9fccd15155674be89d2105', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:47}] to localhost:27017]
[2020-11-02_14:39:37.667 | [cluster-ClusterId{value='5f9fccd15155674be89d2105', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2266300}]
[2020-11-02_14:39:38.384 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_14:39:38.384 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_14:39:38.384 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_14:39:38.384 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_14:39:38.385 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean | Mapping filter: 'springSecurityFilterChain' to: [/*]]
[2020-11-02_14:39:38.385 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_14:39:38.385 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_14:39:38.385 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_14:39:38.895 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_14:39:38.896 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_14:39:38.896 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_14:39:38.899 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_14:39:38.900 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_14:39:38.901 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:39:38.904 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_14:39:38.905 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_14:39:38.906 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_14:39:38.910 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:39:38.911 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:39:39.017 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:39:39.018 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:39:39.020 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:39:39.514 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@445b295b: startup date [Mon Nov 02 14:39:33 IST 2020]; root of context hierarchy]
[2020-11-02_14:39:39.584 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:39:39.584 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:39:39.628 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:39:40.191 | [main] | INFO  | org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration | 

Using generated security password: a2392ce7-3414-4765-b81e-75718ce77d6e
]
[2020-11-02_14:39:40.366 | [main] | INFO  | org.springframework.security.web.DefaultSecurityFilterChain | Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4652c74d, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b999ee8, org.springframework.security.web.header.HeaderWriterFilter@6750e381, org.springframework.security.web.csrf.CsrfFilter@4aaecabd, org.springframework.security.web.authentication.logout.LogoutFilter@5b8853, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@238291d4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@76563ae7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@72a8361b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29bbc391, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b4a4e40, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cc12db2, org.springframework.security.web.session.SessionManagementFilter@b022551, org.springframework.security.web.access.ExceptionTranslationFilter@7739aac4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4645679e]]
[2020-11-02_14:39:40.448 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_14:39:40.472 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_14:39:40.680 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_14:39:40.681 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:39:40.906 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_14:39:40.907 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_14:39:40.907 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_14:39:40.938 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_14:39:40.979 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_14:39:41.141 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:39:41.143 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_14:39:41.160 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_14:39:41.165 | [main] | INFO  | com.target.notification.Main | Started Main in 7.482 seconds (JVM running for 8.149)]
[2020-11-02_14:39:47.429 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_14:39:47.429 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_14:39:47.456 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms]
[2020-11-02_14:56:44.310 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 5708 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_14:56:44.314 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_14:56:44.359 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3af9c5b7: startup date [Mon Nov 02 14:56:44 IST 2020]; root of context hierarchy]
[2020-11-02_14:56:45.228 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:56:45.229 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_14:56:45.576 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_14:56:45.986 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$2e6d0faa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_14:56:46.558 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_14:56:46.572 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:56:46.583 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_14:56:46.583 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_14:56:46.593 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_14:56:46.724 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_14:56:46.724 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2367 ms]
[2020-11-02_14:56:47.690 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_14:56:47.694 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_14:56:47.694 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_14:56:47.694 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_14:56:47.694 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_14:56:47.695 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_14:56:47.695 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_14:56:48.136 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_14:56:48.137 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_14:56:48.137 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_14:56:48.140 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_14:56:48.141 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_14:56:48.142 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:56:48.145 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_14:56:48.146 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_14:56:48.146 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_14:56:48.150 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_14:56:48.150 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:56:48.245 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:56:48.245 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_14:56:48.246 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_14:56:48.750 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3af9c5b7: startup date [Mon Nov 02 14:56:44 IST 2020]; root of context hierarchy]
[2020-11-02_14:56:48.826 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:56:48.826 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:56:48.875 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_14:56:49.359 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_14:56:49.381 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_14:56:49.437 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_14:56:49.437 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_14:56:49.660 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_14:56:49.661 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_14:56:49.661 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_14:56:49.689 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_14:56:49.742 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_14:56:49.903 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_14:56:49.905 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_14:56:49.923 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_14:56:49.928 | [main] | INFO  | com.target.notification.Main | Started Main in 5.879 seconds (JVM running for 6.555)]
[2020-11-02_14:57:06.095 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_14:57:06.095 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_14:57:06.113 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms]
[2020-11-02_15:01:59.230 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 18716 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_15:01:59.235 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_15:01:59.275 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ab778a: startup date [Mon Nov 02 15:01:59 IST 2020]; root of context hierarchy]
[2020-11-02_15:02:00.256 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_15:02:00.257 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_15:02:00.695 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_15:02:00.725 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_15:02:01.241 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$9c06ce1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_15:02:01.871 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_15:02:01.891 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_15:02:01.904 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_15:02:01.904 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_15:02:01.914 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_15:02:02.048 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_15:02:02.048 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2777 ms]
[2020-11-02_15:02:03.186 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_15:02:03.259 | [cluster-ClusterId{value='5f9fd213515567491c0f22b1', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:48}] to localhost:27017]
[2020-11-02_15:02:03.263 | [cluster-ClusterId{value='5f9fd213515567491c0f22b1', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2365900}]
[2020-11-02_15:02:04.018 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_15:02:04.021 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_15:02:04.022 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_15:02:04.022 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_15:02:04.022 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_15:02:04.022 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_15:02:04.022 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_15:02:04.519 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_15:02:04.520 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_15:02:04.521 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_15:02:04.526 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_15:02:04.527 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_15:02:04.527 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_15:02:04.528 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_15:02:04.531 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_15:02:04.532 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_15:02:04.533 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_15:02:04.536 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_15:02:04.536 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_15:02:04.649 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_15:02:04.650 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_15:02:04.651 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_15:02:05.182 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6ab778a: startup date [Mon Nov 02 15:01:59 IST 2020]; root of context hierarchy]
[2020-11-02_15:02:05.249 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_15:02:05.250 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_15:02:05.294 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_15:02:05.753 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_15:02:05.778 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_15:02:05.835 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_15:02:05.835 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_15:02:06.204 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_15:02:06.204 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_15:02:06.204 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_15:02:06.237 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_15:02:06.281 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_15:02:06.452 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_15:02:06.453 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_15:02:06.467 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_15:02:06.472 | [main] | INFO  | com.target.notification.Main | Started Main in 7.524 seconds (JVM running for 8.307)]
[2020-11-02_15:02:09.923 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_15:02:09.923 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_15:02:09.952 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms]
[2020-11-02_15:42:19.386 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 18440 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_15:42:19.391 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_15:42:19.428 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7494f96a: startup date [Mon Nov 02 15:42:19 IST 2020]; root of context hierarchy]
[2020-11-02_15:42:20.407 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_15:42:20.408 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_15:42:20.721 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_15:42:20.753 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_15:42:21.147 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$39363dab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_15:42:21.711 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_15:42:21.726 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_15:42:21.737 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_15:42:21.737 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_15:42:21.747 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_15:42:21.879 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_15:42:21.879 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2453 ms]
[2020-11-02_15:42:22.977 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_15:42:23.035 | [cluster-ClusterId{value='5f9fdb8629dab74808e5d50a', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:49}] to 127.0.0.1:27017]
[2020-11-02_15:42:23.038 | [cluster-ClusterId{value='5f9fdb8629dab74808e5d50a', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2082100}]
[2020-11-02_15:42:23.748 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_15:42:23.752 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_15:42:23.752 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_15:42:23.752 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_15:42:23.752 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_15:42:23.753 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_15:42:23.753 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_15:42:24.234 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_15:42:24.235 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_15:42:24.235 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_15:42:24.241 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_15:42:24.241 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_15:42:24.241 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_15:42:24.243 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_15:42:24.246 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_15:42:24.247 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_15:42:24.248 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_15:42:24.251 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_15:42:24.251 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_15:42:24.361 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_15:42:24.362 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_15:42:24.364 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_15:42:24.684 | [main] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_15:42:24.691 | [cluster-ClusterId{value='5f9fdb8829dab74808e5d50b', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:50}] to localhost:27017]
[2020-11-02_15:42:24.692 | [cluster-ClusterId{value='5f9fdb8829dab74808e5d50b', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=725200}]
[2020-11-02_15:42:24.944 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7494f96a: startup date [Mon Nov 02 15:42:19 IST 2020]; root of context hierarchy]
[2020-11-02_15:42:25.035 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_15:42:25.035 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_15:42:25.076 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_15:42:25.599 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_15:42:25.622 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_15:42:25.676 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_15:42:25.677 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_15:42:25.910 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_15:42:25.910 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_15:42:25.910 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_15:42:25.940 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_15:42:26.189 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_15:42:26.417 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_15:42:26.418 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_15:42:26.432 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_15:42:26.437 | [main] | INFO  | com.target.notification.Main | Started Main in 7.312 seconds (JVM running for 7.985)]
[2020-11-02_15:42:41.634 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_15:42:41.634 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_15:42:41.653 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms]
[2020-11-02_15:42:52.118 | [http-nio-8082-exec-9] | INFO  | org.springframework.context.annotation.AnnotationConfigApplicationContext | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@380f6ad6: startup date [Mon Nov 02 15:42:52 IST 2020]; root of context hierarchy]
[2020-11-02_15:42:52.145 | [http-nio-8082-exec-9] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_15:42:52.149 | [cluster-ClusterId{value='5f9fdba429dab74808e5d50c', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:3, serverValue:51}] to 127.0.0.1:27017]
[2020-11-02_15:42:52.152 | [cluster-ClusterId{value='5f9fdba429dab74808e5d50c', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2691100}]
[2020-11-02_15:42:52.209 | [http-nio-8082-exec-9] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:4, serverValue:52}] to 127.0.0.1:27017]
[2020-11-02_16:15:38.798 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 7980 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_16:15:38.803 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_16:15:38.899 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1757cd72: startup date [Mon Nov 02 16:15:38 IST 2020]; root of context hierarchy]
[2020-11-02_16:15:39.964 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_16:15:39.965 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_16:15:40.424 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_16:15:40.460 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_16:15:40.871 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3b5fb3a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_16:15:41.500 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_16:15:41.516 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_16:15:41.526 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_16:15:41.526 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_16:15:41.536 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_16:15:41.686 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_16:15:41.686 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2790 ms]
[2020-11-02_16:15:42.876 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_16:15:42.947 | [cluster-ClusterId{value='5f9fe35629dab71f2cbd938d', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:53}] to 127.0.0.1:27017]
[2020-11-02_16:15:42.950 | [cluster-ClusterId{value='5f9fe35629dab71f2cbd938d', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2624500}]
[2020-11-02_16:15:43.650 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_16:15:43.653 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_16:15:43.654 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_16:15:43.654 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_16:15:43.654 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_16:15:43.654 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_16:15:43.655 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_16:15:44.171 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_16:15:44.172 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_16:15:44.173 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_16:15:44.180 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_16:15:44.181 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_16:15:44.182 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_16:15:44.182 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_16:15:44.184 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_16:15:44.188 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_16:15:44.189 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_16:15:44.190 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_16:15:44.194 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_16:15:44.196 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_16:15:44.329 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_16:15:44.331 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_16:15:44.331 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_16:15:44.728 | [main] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_16:15:44.736 | [cluster-ClusterId{value='5f9fe35829dab71f2cbd938e', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:54}] to localhost:27017]
[2020-11-02_16:15:44.737 | [cluster-ClusterId{value='5f9fe35829dab71f2cbd938e', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1066200}]
[2020-11-02_16:15:45.104 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1757cd72: startup date [Mon Nov 02 16:15:38 IST 2020]; root of context hierarchy]
[2020-11-02_16:15:45.211 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_16:15:45.212 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_16:15:45.270 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_16:15:45.800 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_16:15:45.830 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_16:15:45.920 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_16:15:45.920 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_16:15:46.283 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_16:15:46.284 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_16:15:46.284 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_16:15:46.317 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_16:15:46.357 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_16:15:46.566 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_16:15:46.568 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_16:15:46.590 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_16:15:46.596 | [main] | INFO  | com.target.notification.Main | Started Main in 8.053 seconds (JVM running for 8.731)]
[2020-11-02_16:20:39.795 | [http-nio-8082-exec-2] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_16:20:39.796 | [http-nio-8082-exec-2] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_16:20:39.861 | [http-nio-8082-exec-2] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms]
[2020-11-02_16:20:45.974 | [http-nio-8082-exec-7] | INFO  | org.springframework.context.annotation.AnnotationConfigApplicationContext | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7e4953a0: startup date [Mon Nov 02 16:20:45 IST 2020]; root of context hierarchy]
[2020-11-02_16:20:46.059 | [http-nio-8082-exec-7] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_16:20:46.069 | [cluster-ClusterId{value='5f9fe48629dab71f2cbd938f', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:3, serverValue:55}] to 127.0.0.1:27017]
[2020-11-02_16:20:46.071 | [cluster-ClusterId{value='5f9fe48629dab71f2cbd938f', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1358400}]
[2020-11-02_16:20:46.250 | [http-nio-8082-exec-7] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:4, serverValue:56}] to 127.0.0.1:27017]
[2020-11-02_16:21:07.544 | [http-nio-8082-exec-8] | INFO  | org.springframework.context.annotation.AnnotationConfigApplicationContext | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@73430701: startup date [Mon Nov 02 16:21:07 IST 2020]; root of context hierarchy]
[2020-11-02_16:21:07.555 | [http-nio-8082-exec-8] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_16:21:07.563 | [cluster-ClusterId{value='5f9fe49b29dab71f2cbd9390', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:5, serverValue:57}] to 127.0.0.1:27017]
[2020-11-02_16:21:07.564 | [cluster-ClusterId{value='5f9fe49b29dab71f2cbd9390', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=905600}]
[2020-11-02_16:21:07.616 | [http-nio-8082-exec-8] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:6, serverValue:58}] to 127.0.0.1:27017]
[2020-11-02_17:45:22.507 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using DelegatingSmartContextLoader]
[2020-11-02_17:45:22.517 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml}.]
[2020-11-02_17:45:22.519 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_17:45:22.568 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_17:45:22.680 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@53a7c96c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@669b0fad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@19d8988f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72510698, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1fd05d17, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2108cf27, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c492769, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6569bbe, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1b735686, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7ce5c338, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4922d1a2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7b9b2853]]
[2020-11-02_17:45:22.770 | [Test worker] | INFO  | org.springframework.context.support.GenericApplicationContext | Refreshing org.springframework.context.support.GenericApplicationContext@d235e55: startup date [Mon Nov 02 17:45:22 IST 2020]; root of context hierarchy]
[2020-11-02_17:45:23.274 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_17:45:23.357 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_17:45:23.357 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_17:45:23.360 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_17:45:23.361 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_17:45:23.619 | [Thread-4] | INFO  | org.springframework.context.support.GenericApplicationContext | Closing org.springframework.context.support.GenericApplicationContext@d235e55: startup date [Mon Nov 02 17:45:22 IST 2020]; root of context hierarchy]
[2020-11-02_17:48:56.885 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using DelegatingSmartContextLoader]
[2020-11-02_17:48:56.894 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml}.]
[2020-11-02_17:48:56.896 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_17:48:56.941 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_17:48:57.047 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@53a7c96c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@669b0fad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@19d8988f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72510698, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1fd05d17, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2108cf27, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c492769, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6569bbe, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1b735686, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7ce5c338, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4922d1a2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7b9b2853]]
[2020-11-02_17:48:57.124 | [Test worker] | INFO  | org.springframework.context.support.GenericApplicationContext | Refreshing org.springframework.context.support.GenericApplicationContext@3f47421f: startup date [Mon Nov 02 17:48:57 IST 2020]; root of context hierarchy]
[2020-11-02_17:48:57.647 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_17:48:57.741 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_17:48:57.742 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_17:48:57.746 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_17:48:57.746 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_17:48:57.992 | [Thread-4] | INFO  | org.springframework.context.support.GenericApplicationContext | Closing org.springframework.context.support.GenericApplicationContext@3f47421f: startup date [Mon Nov 02 17:48:57 IST 2020]; root of context hierarchy]
[2020-11-02_17:50:47.513 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using DelegatingSmartContextLoader]
[2020-11-02_17:50:47.523 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml}.]
[2020-11-02_17:50:47.526 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_17:50:47.579 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_17:50:47.690 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@208cdb39, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@557b38b6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@148c18b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@106538e7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@56766cc1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5ac44031, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d47867b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@245c2734, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4129471a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@391452c6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@18417fc1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5d619e7a]]
[2020-11-02_17:50:48.324 | [Test worker] | INFO  | org.springframework.context.support.GenericApplicationContext | Refreshing org.springframework.context.support.GenericApplicationContext@4919cfcb: startup date [Mon Nov 02 17:50:48 IST 2020]; root of context hierarchy]
[2020-11-02_17:50:48.715 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_17:50:48.836 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_17:50:48.836 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_17:50:48.840 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_17:50:48.840 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_17:50:49.075 | [Thread-4] | INFO  | org.springframework.context.support.GenericApplicationContext | Closing org.springframework.context.support.GenericApplicationContext@4919cfcb: startup date [Mon Nov 02 17:50:48 IST 2020]; root of context hierarchy]
[2020-11-02_17:52:01.297 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using DelegatingSmartContextLoader]
[2020-11-02_17:52:01.306 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml}.]
[2020-11-02_17:52:01.308 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_17:52:01.353 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_17:52:01.455 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@53a7c96c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@669b0fad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@19d8988f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72510698, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1fd05d17, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2108cf27, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c492769, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6569bbe, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1b735686, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7ce5c338, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4922d1a2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7b9b2853]]
[2020-11-02_17:58:15.034 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using DelegatingSmartContextLoader]
[2020-11-02_17:58:15.045 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml}.]
[2020-11-02_17:58:15.046 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_17:58:15.093 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_17:58:15.195 | [Test worker] | INFO  | org.springframework.test.context.support.DefaultTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2108cf27, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c492769, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6569bbe, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1b735686, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7ce5c338, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4922d1a2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7b9b2853, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7a5d96c0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@28f376b0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@77830dcd, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@55786ade, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@43851d27]]
[2020-11-02_18:00:55.292 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:00:55.301 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:00:55.302 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:00:55.417 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:00:55.597 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:00:55.701 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:00:56.008 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 17016 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:00:56.009 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:00:56.051 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@62495735: startup date [Mon Nov 02 18:00:56 IST 2020]; root of context hierarchy]
[2020-11-02_18:00:57.204 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:00:57.205 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:00:57.757 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:00:57.792 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:00:58.373 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$971f3c1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:00:59.116 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:00:59.117 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:00:59.118 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:00:59.124 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:00:59.125 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:00:59.126 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:00:59.127 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:00:59.129 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:00:59.133 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:00:59.136 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:00:59.136 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:00:59.148 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:00:59.149 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:01:00.302 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:01:00.398 | [cluster-ClusterId{value='5f9ffc045155674278ce9b59', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:59}] to 127.0.0.1:27017]
[2020-11-02_18:01:00.404 | [cluster-ClusterId{value='5f9ffc045155674278ce9b59', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3175000}]
[2020-11-02_18:01:01.407 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:01:01.408 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:01:01.410 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:01:02.017 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:01:02.023 | [cluster-ClusterId{value='5f9ffc065155674278ce9b5a', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:60}] to localhost:27017]
[2020-11-02_18:01:02.025 | [cluster-ClusterId{value='5f9ffc065155674278ce9b5a', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=819900}]
[2020-11-02_18:01:02.406 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@62495735: startup date [Mon Nov 02 18:00:56 IST 2020]; root of context hierarchy]
[2020-11-02_18:01:02.496 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:01:02.496 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:01:02.560 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:01:03.248 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:01:03.316 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:01:03.316 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:01:03.836 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:01:03.837 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:01:03.837 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:01:03.876 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:01:03.937 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:01:04.184 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 8.437 seconds (JVM running for 9.997)]
[2020-11-02_18:01:04.378 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:01:04.410 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:01:04.410 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:01:04.410 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:01:04.410 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:01:04.501 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@62495735: startup date [Mon Nov 02 18:00:56 IST 2020]; root of context hierarchy]
[2020-11-02_18:01:04.504 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:01:04.505 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:01:04.506 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:01:51.231 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:01:51.241 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:01:51.242 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:01:51.364 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:01:51.478 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:01:51.591 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:01:51.852 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 12316 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:01:51.853 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:01:51.891 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:01:51 IST 2020]; root of context hierarchy]
[2020-11-02_18:01:53.007 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:01:53.008 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:01:53.389 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:01:53.424 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:01:53.948 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$be154565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:01:54.650 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:01:54.652 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:01:54.652 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:01:54.661 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:01:54.662 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:01:54.663 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:01:54.664 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:01:54.667 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:01:54.671 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:01:54.674 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:01:54.675 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:01:54.685 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:01:54.686 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:01:55.677 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:01:55.760 | [cluster-ClusterId{value='5f9ffc3b515567301c17bc23', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:61}] to 127.0.0.1:27017]
[2020-11-02_18:01:55.766 | [cluster-ClusterId{value='5f9ffc3b515567301c17bc23', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3135700}]
[2020-11-02_18:01:57.473 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:01:57.476 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:01:57.479 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:01:58.333 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:01:58.339 | [cluster-ClusterId{value='5f9ffc3e515567301c17bc24', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:62}] to localhost:27017]
[2020-11-02_18:01:58.341 | [cluster-ClusterId{value='5f9ffc3e515567301c17bc24', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=768300}]
[2020-11-02_18:01:58.807 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:01:51 IST 2020]; root of context hierarchy]
[2020-11-02_18:01:58.960 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:01:58.961 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:01:59.034 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:01:59.842 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:01:59.901 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:01:59.901 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:02:00.306 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:02:00.307 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:02:00.307 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:02:00.341 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:02:00.383 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:02:00.574 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 8.938 seconds (JVM running for 10.603)]
[2020-11-02_18:02:00.755 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:02:00.795 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:02:00.795 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:02:00.795 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:02:00.796 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:02:00.882 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:01:51 IST 2020]; root of context hierarchy]
[2020-11-02_18:02:00.884 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:02:00.885 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:02:00.885 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:05:30.850 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:05:30.858 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:05:30.859 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:05:30.966 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:05:31.081 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:05:31.190 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:05:31.497 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 2296 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:05:31.498 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:05:31.544 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:05:31 IST 2020]; root of context hierarchy]
[2020-11-02_18:05:32.835 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:05:32.836 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:05:33.246 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:05:33.271 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:05:33.788 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$a0aed4bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:05:34.544 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:05:34.546 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:05:34.547 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:05:34.554 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:05:34.555 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:05:34.556 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:05:34.557 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:05:34.559 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:05:34.563 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:05:34.565 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:05:34.566 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:05:34.576 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:05:34.576 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:05:35.598 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:05:35.675 | [cluster-ClusterId{value='5f9ffd1751556708f81c2975', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:63}] to 127.0.0.1:27017]
[2020-11-02_18:05:35.681 | [cluster-ClusterId{value='5f9ffd1751556708f81c2975', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3445700}]
[2020-11-02_18:05:36.592 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:05:36.594 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:05:36.595 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:05:37.144 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:05:37.151 | [cluster-ClusterId{value='5f9ffd1951556708f81c2976', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:64}] to localhost:27017]
[2020-11-02_18:05:37.152 | [cluster-ClusterId{value='5f9ffd1951556708f81c2976', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=832600}]
[2020-11-02_18:05:37.508 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:05:31 IST 2020]; root of context hierarchy]
[2020-11-02_18:05:37.594 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:05:37.595 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:05:37.658 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:05:38.276 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:05:38.334 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:05:38.334 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:05:38.780 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:05:38.781 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:05:38.781 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:05:38.815 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:05:38.862 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:05:39.066 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.838 seconds (JVM running for 9.328)]
[2020-11-02_18:05:39.265 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:05:31 IST 2020]; root of context hierarchy]
[2020-11-02_18:05:39.267 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:05:39.268 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:05:39.268 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:06:48.328 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:06:48.336 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:06:48.337 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:06:48.445 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:06:48.550 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:06:48.654 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:06:48.896 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 9864 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:06:48.897 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:06:48.931 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:06:48 IST 2020]; root of context hierarchy]
[2020-11-02_18:06:50.061 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:06:50.063 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:06:50.495 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:06:50.519 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:06:51.057 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$d451f1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:06:51.840 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:06:51.842 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:06:51.844 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:06:51.855 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:06:51.856 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:06:51.857 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:06:51.857 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:06:51.859 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:06:51.866 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:06:51.869 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:06:51.871 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:06:51.888 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:06:51.889 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:06:53.214 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:06:53.297 | [cluster-ClusterId{value='5f9ffd655155672688eeddfa', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:65}] to 127.0.0.1:27017]
[2020-11-02_18:06:53.302 | [cluster-ClusterId{value='5f9ffd655155672688eeddfa', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2794400}]
[2020-11-02_18:06:54.345 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:06:54.347 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:06:54.348 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:06:54.961 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:06:54.976 | [cluster-ClusterId{value='5f9ffd665155672688eeddfb', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:66}] to localhost:27017]
[2020-11-02_18:06:54.978 | [cluster-ClusterId{value='5f9ffd665155672688eeddfb', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=826900}]
[2020-11-02_18:06:55.408 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:06:48 IST 2020]; root of context hierarchy]
[2020-11-02_18:06:55.521 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:06:55.523 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:06:55.579 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:06:56.311 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:06:56.395 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:06:56.395 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:06:56.777 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:06:56.777 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:06:56.777 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:06:56.807 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:06:56.860 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:06:57.117 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 8.427 seconds (JVM running for 9.865)]
[2020-11-02_18:06:57.324 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:06:48 IST 2020]; root of context hierarchy]
[2020-11-02_18:06:57.328 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:06:57.329 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:06:57.329 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:07:26.075 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:07:26.085 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:07:26.086 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:07:26.234 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:07:26.384 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:07:26.506 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2469a9fa, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8f5714e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1c958141, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3226974a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5b69de8d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@78b5bbaf, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@481aa271, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4e00f0ff, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b08c204, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@eb56209, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@13215084, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5a6fdd17]]
[2020-11-02_18:07:26.798 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 8996 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:07:26.799 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:07:26.842 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3f914d95: startup date [Mon Nov 02 18:07:26 IST 2020]; root of context hierarchy]
[2020-11-02_18:07:28.064 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:07:28.065 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:07:28.575 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:07:28.602 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:07:29.289 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$56d2ac83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:07:30.162 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:07:30.163 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:07:30.164 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:07:30.171 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:07:30.171 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:07:30.172 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:07:30.173 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:07:30.175 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:07:30.177 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:07:30.179 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:07:30.182 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:07:30.192 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:07:30.194 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:07:31.380 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:07:31.472 | [cluster-ClusterId{value='5f9ffd8b51556723242d841e', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:67}] to 127.0.0.1:27017]
[2020-11-02_18:07:31.478 | [cluster-ClusterId{value='5f9ffd8b51556723242d841e', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3672300}]
[2020-11-02_18:07:32.996 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:07:32.998 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:07:33.001 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:07:34.839 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:07:34.850 | [cluster-ClusterId{value='5f9ffd8e51556723242d841f', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:68}] to localhost:27017]
[2020-11-02_18:07:34.853 | [cluster-ClusterId{value='5f9ffd8e51556723242d841f', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2585700}]
[2020-11-02_18:07:35.520 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3f914d95: startup date [Mon Nov 02 18:07:26 IST 2020]; root of context hierarchy]
[2020-11-02_18:07:35.692 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:07:35.692 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:07:35.789 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:07:36.696 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:07:36.981 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:07:36.981 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:07:37.233 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:07:37.234 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:07:37.234 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:07:37.279 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:07:37.331 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:07:37.546 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 10.999 seconds (JVM running for 13.471)]
[2020-11-02_18:08:54.118 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:08:54.126 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:08:54.127 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:08:54.227 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:08:54.339 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:08:54.448 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:08:54.696 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 15844 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:08:54.697 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:08:54.730 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:08:54 IST 2020]; root of context hierarchy]
[2020-11-02_18:08:55.813 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:08:55.814 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:08:56.246 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:08:56.268 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:08:56.766 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$d451f1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:08:57.359 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:08:57.361 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:08:57.361 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:08:57.367 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:08:57.368 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:08:57.368 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:08:57.369 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:08:57.371 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:08:57.374 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:08:57.376 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:08:57.377 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:08:57.385 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:08:57.386 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:08:58.317 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:08:58.412 | [cluster-ClusterId{value='5f9ffde25155673de4848ee6', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:69}] to 127.0.0.1:27017]
[2020-11-02_18:08:58.418 | [cluster-ClusterId{value='5f9ffde25155673de4848ee6', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3258700}]
[2020-11-02_18:08:59.327 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:08:59.328 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:08:59.330 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:08:59.854 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:08:59.859 | [cluster-ClusterId{value='5f9ffde35155673de4848ee7', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:70}] to localhost:27017]
[2020-11-02_18:08:59.860 | [cluster-ClusterId{value='5f9ffde35155673de4848ee7', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=658100}]
[2020-11-02_18:09:00.172 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:08:54 IST 2020]; root of context hierarchy]
[2020-11-02_18:09:00.265 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:09:00.265 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:09:00.348 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:09:00.957 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:09:01.010 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:09:01.010 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:09:01.369 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:09:01.369 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:09:01.370 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:09:01.397 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:09:01.434 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:09:01.628 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.146 seconds (JVM running for 8.716)]
[2020-11-02_18:09:01.805 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:09:01.834 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:09:01.834 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:09:01.834 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:09:01.834 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:09:01.911 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:08:54 IST 2020]; root of context hierarchy]
[2020-11-02_18:09:01.915 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:09:01.916 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:09:01.916 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:10:01.682 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:10:01.693 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:10:01.694 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:10:01.822 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:10:01.968 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:10:02.094 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@421d9001, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2469a9fa, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@8f5714e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1c958141, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3226974a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b69de8d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@78b5bbaf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@481aa271, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4e00f0ff, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5b08c204, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@eb56209, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@13215084]]
[2020-11-02_18:10:02.366 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 8400 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:10:02.366 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:10:02.404 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2f5bf6ce: startup date [Mon Nov 02 18:10:02 IST 2020]; root of context hierarchy]
[2020-11-02_18:10:03.632 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:10:03.633 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:10:04.093 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:10:04.122 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:10:04.734 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$8fa1f6f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:10:05.622 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:10:05.624 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:10:05.624 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:10:05.631 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:10:05.632 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:10:05.633 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:10:05.633 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:10:05.635 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:10:05.639 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:10:05.641 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:10:05.643 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:10:05.656 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:10:05.658 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:10:06.975 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:10:07.055 | [cluster-ClusterId{value='5f9ffe2651556720d0e376c3', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:71}] to 127.0.0.1:27017]
[2020-11-02_18:10:07.061 | [cluster-ClusterId{value='5f9ffe2651556720d0e376c3', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2915400}]
[2020-11-02_18:10:08.401 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:10:08.402 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:10:08.403 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:10:09.242 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:10:09.249 | [cluster-ClusterId{value='5f9ffe2951556720d0e376c4', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:72}] to localhost:27017]
[2020-11-02_18:10:09.251 | [cluster-ClusterId{value='5f9ffe2951556720d0e376c4', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1137000}]
[2020-11-02_18:10:09.807 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@2f5bf6ce: startup date [Mon Nov 02 18:10:02 IST 2020]; root of context hierarchy]
[2020-11-02_18:10:09.963 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:10:09.963 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:10:10.068 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:10:11.130 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:10:11.350 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:10:11.350 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:10:11.574 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:10:11.574 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:10:11.574 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:10:11.603 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:10:11.644 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:10:11.842 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 9.712 seconds (JVM running for 11.426)]
[2020-11-02_18:11:02.122 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:11:02.132 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:11:02.134 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:11:02.255 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:11:02.382 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:11:02.500 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2fbb98d0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@121a1209, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@25e44868, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5a65d4b8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@296baa3c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ba36f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6c03dd56, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1837147a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6cf9670a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1cd0dca8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ecb5b09, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4eff166e]]
[2020-11-02_18:11:02.769 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 4592 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:11:02.770 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:11:02.807 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@31dc1600: startup date [Mon Nov 02 18:11:02 IST 2020]; root of context hierarchy]
[2020-11-02_18:11:04.100 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:11:04.101 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:11:04.583 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:11:04.614 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:11:05.212 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$5b87ded8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:11:06.137 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:11:06.139 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:11:06.140 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:11:06.149 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:11:06.150 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:11:06.151 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:11:06.152 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:11:06.155 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:11:06.159 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:11:06.162 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:11:06.163 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:11:06.172 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:11:06.174 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:11:07.580 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:11:07.671 | [cluster-ClusterId{value='5f9ffe6351556711f0fb31de', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:73}] to 127.0.0.1:27017]
[2020-11-02_18:11:07.679 | [cluster-ClusterId{value='5f9ffe6351556711f0fb31de', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3790000}]
[2020-11-02_18:11:09.106 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:11:09.108 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:11:09.111 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:11:10.177 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:11:10.182 | [cluster-ClusterId{value='5f9ffe6651556711f0fb31df', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:74}] to localhost:27017]
[2020-11-02_18:11:10.184 | [cluster-ClusterId{value='5f9ffe6651556711f0fb31df', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1415200}]
[2020-11-02_18:11:10.704 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@31dc1600: startup date [Mon Nov 02 18:11:02 IST 2020]; root of context hierarchy]
[2020-11-02_18:11:10.829 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:11:10.829 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:11:10.910 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:11:11.899 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:11:12.255 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:11:12.255 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:11:12.558 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:11:12.558 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:11:12.559 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:11:12.600 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:11:12.662 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:11:12.910 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 10.372 seconds (JVM running for 12.025)]
[2020-11-02_18:12:14.963 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:12:14.972 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:12:14.974 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:12:15.100 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:12:15.231 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:12:15.350 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@37ac0959, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@25b80165, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@23c2ab7b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6976f4b1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e47de07, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b115383, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d3eb2e9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@33330083, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@33045704, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@625887ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7ae9d8f4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5175f832]]
[2020-11-02_18:12:15.627 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 16996 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:12:15.628 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:12:15.669 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1e40bd9b: startup date [Mon Nov 02 18:12:15 IST 2020]; root of context hierarchy]
[2020-11-02_18:12:16.819 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:12:16.820 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:12:17.294 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:12:17.321 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:12:17.890 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$7fa3e11c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:12:18.837 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:12:18.839 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:12:18.840 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:12:18.846 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:12:18.847 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:12:18.848 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:12:18.849 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:12:18.852 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:12:18.857 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:12:18.859 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:12:18.860 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:12:18.872 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:12:18.873 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:12:20.285 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:12:20.408 | [cluster-ClusterId{value='5f9ffeac51556742640215cd', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:75}] to 127.0.0.1:27017]
[2020-11-02_18:12:20.415 | [cluster-ClusterId{value='5f9ffeac51556742640215cd', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4091300}]
[2020-11-02_18:12:21.810 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:12:21.811 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:12:21.813 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:12:22.745 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:12:22.751 | [cluster-ClusterId{value='5f9ffeae51556742640215ce', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:76}] to localhost:27017]
[2020-11-02_18:12:22.753 | [cluster-ClusterId{value='5f9ffeae51556742640215ce', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=756500}]
[2020-11-02_18:12:23.306 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1e40bd9b: startup date [Mon Nov 02 18:12:15 IST 2020]; root of context hierarchy]
[2020-11-02_18:12:23.444 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:12:23.444 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:12:23.534 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:12:24.492 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:12:24.886 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:12:24.886 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:12:25.162 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:12:25.162 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:12:25.162 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:12:25.206 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:12:25.278 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:12:25.598 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 10.209 seconds (JVM running for 11.887)]
[2020-11-02_18:13:05.590 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:13:05.640 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:13:05.641 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:13:05.641 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:13:05.641 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:13:05.734 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@1e40bd9b: startup date [Mon Nov 02 18:12:15 IST 2020]; root of context hierarchy]
[2020-11-02_18:13:05.737 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:13:05.738 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:13:05.739 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:13:32.848 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:13:32.857 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:13:32.858 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:13:32.978 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:13:33.138 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:13:33.275 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:13:33.524 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 12764 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:13:33.524 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:13:33.561 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:13:33 IST 2020]; root of context hierarchy]
[2020-11-02_18:13:34.615 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:13:34.616 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:13:34.976 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:13:34.999 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:13:35.475 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$a11d8780] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:13:36.209 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:13:36.211 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:13:36.212 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:13:36.218 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:13:36.219 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:13:36.220 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:13:36.220 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:13:36.222 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:13:36.226 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:13:36.227 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:13:36.228 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:13:36.235 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:13:36.236 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:13:37.333 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:13:37.409 | [cluster-ClusterId{value='5f9ffef951556731dcbd4a5d', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:77}] to 127.0.0.1:27017]
[2020-11-02_18:13:37.414 | [cluster-ClusterId{value='5f9ffef951556731dcbd4a5d', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3562300}]
[2020-11-02_18:13:38.282 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:13:38.283 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:13:38.285 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:13:38.812 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:13:38.817 | [cluster-ClusterId{value='5f9ffefa51556731dcbd4a5e', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:78}] to localhost:27017]
[2020-11-02_18:13:38.819 | [cluster-ClusterId{value='5f9ffefa51556731dcbd4a5e', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1217800}]
[2020-11-02_18:13:39.186 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:13:33 IST 2020]; root of context hierarchy]
[2020-11-02_18:13:39.272 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:13:39.272 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:13:39.329 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:13:39.993 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:13:40.045 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:13:40.045 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:13:40.467 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:13:40.468 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:13:40.468 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:13:40.498 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:13:40.541 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:13:40.748 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.437 seconds (JVM running for 9.048)]
[2020-11-02_18:13:40.910 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:13:40.938 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:13:40.939 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:13:40.940 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:13:40.940 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:13:41.028 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:13:33 IST 2020]; root of context hierarchy]
[2020-11-02_18:13:41.031 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:13:41.032 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:13:41.032 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:14:35.565 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:14:35.573 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:14:35.574 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:14:35.680 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:14:35.790 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:14:35.894 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:14:36.135 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 7080 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:14:36.135 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:14:36.174 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:14:36 IST 2020]; root of context hierarchy]
[2020-11-02_18:14:37.227 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:14:37.228 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:14:37.586 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:14:37.615 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:14:38.103 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$ad803c39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:14:38.827 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:14:38.829 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:14:38.829 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:14:38.835 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:14:38.837 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:14:38.837 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:14:38.838 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:14:38.839 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:14:38.842 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:14:38.843 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:14:38.846 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:14:38.854 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:14:38.855 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:14:39.912 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:14:39.996 | [cluster-ClusterId{value='5f9fff375155671ba886b6de', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:79}] to 127.0.0.1:27017]
[2020-11-02_18:14:40.001 | [cluster-ClusterId{value='5f9fff375155671ba886b6de', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3515300}]
[2020-11-02_18:14:40.833 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:14:40.834 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:14:40.835 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:14:41.363 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:14:41.370 | [cluster-ClusterId{value='5f9fff395155671ba886b6df', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:80}] to localhost:27017]
[2020-11-02_18:14:41.372 | [cluster-ClusterId{value='5f9fff395155671ba886b6df', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=948800}]
[2020-11-02_18:14:41.813 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:14:36 IST 2020]; root of context hierarchy]
[2020-11-02_18:14:41.930 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:14:41.931 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:14:42.016 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:14:42.717 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:14:42.778 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:14:42.778 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:14:43.158 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:14:43.160 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:14:43.160 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:14:43.190 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:14:43.237 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:14:43.414 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.487 seconds (JVM running for 8.941)]
[2020-11-02_18:14:43.554 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:14:43.581 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:14:43.581 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:14:43.582 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:14:43.582 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:14:43.656 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:14:36 IST 2020]; root of context hierarchy]
[2020-11-02_18:14:43.658 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:14:43.659 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:14:43.659 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:17:54.511 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:17:54.519 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:17:54.520 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:17:54.622 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:17:54.730 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:17:54.848 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:17:55.099 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 3592 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:17:55.100 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:17:55.137 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:17:55 IST 2020]; root of context hierarchy]
[2020-11-02_18:17:56.202 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:17:56.204 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:17:56.611 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:17:56.638 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:17:57.136 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$d451f1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:17:57.862 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:17:57.864 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:17:57.865 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:17:57.873 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:17:57.874 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:17:57.875 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:17:57.875 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:17:57.877 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:17:57.881 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:17:57.883 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:17:57.884 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:17:57.897 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:17:57.899 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:17:58.931 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:17:58.999 | [cluster-ClusterId{value='5f9ffffe5155670e0888de3d', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:81}] to 127.0.0.1:27017]
[2020-11-02_18:17:59.006 | [cluster-ClusterId{value='5f9ffffe5155670e0888de3d', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3509300}]
[2020-11-02_18:17:59.899 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:17:59.900 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:17:59.902 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:18:00.446 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:18:00.452 | [cluster-ClusterId{value='5fa000005155670e0888de3e', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:82}] to localhost:27017]
[2020-11-02_18:18:00.453 | [cluster-ClusterId{value='5fa000005155670e0888de3e', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1146400}]
[2020-11-02_18:18:00.825 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:17:55 IST 2020]; root of context hierarchy]
[2020-11-02_18:18:00.922 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:18:00.923 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:18:00.986 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:18:01.658 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:18:01.750 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:18:01.750 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:18:02.131 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:18:02.132 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:18:02.132 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:18:02.169 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:18:02.217 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:18:02.398 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.514 seconds (JVM running for 8.966)]
[2020-11-02_18:18:02.593 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:18:02.629 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:18:02.631 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:18:02.631 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:18:02.631 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:18:02.701 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@6ced93e6: startup date [Mon Nov 02 18:17:55 IST 2020]; root of context hierarchy]
[2020-11-02_18:18:02.703 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:18:02.704 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:18:02.704 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:19:06.457 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:19:06.466 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:19:06.467 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:19:06.573 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:19:06.680 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:19:06.784 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@773c3525, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@56ece5b7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77ec47c1, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@510008f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@13939815, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2263168d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7842e71, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@14499729, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@9cb9f69]]
[2020-11-02_18:19:07.016 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 14896 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:19:07.017 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:19:07.053 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5690c7f9: startup date [Mon Nov 02 18:19:07 IST 2020]; root of context hierarchy]
[2020-11-02_18:19:08.174 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:19:08.175 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:19:08.585 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:19:08.613 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:19:09.089 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$edb2d6a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:19:09.760 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:19:09.762 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:19:09.762 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:19:09.770 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:19:09.771 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:19:09.772 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:19:09.772 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:19:09.775 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:19:09.779 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:19:09.781 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:19:09.782 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:19:09.793 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:19:09.795 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:19:10.887 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:19:10.967 | [cluster-ClusterId{value='5fa000465155673a307fa472', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:83}] to 127.0.0.1:27017]
[2020-11-02_18:19:10.972 | [cluster-ClusterId{value='5fa000465155673a307fa472', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2631800}]
[2020-11-02_18:19:11.917 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:19:11.918 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:19:11.920 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:19:12.387 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:19:12.391 | [cluster-ClusterId{value='5fa000485155673a307fa473', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:84}] to localhost:27017]
[2020-11-02_18:19:12.392 | [cluster-ClusterId{value='5fa000485155673a307fa473', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=508200}]
[2020-11-02_18:19:12.738 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5690c7f9: startup date [Mon Nov 02 18:19:07 IST 2020]; root of context hierarchy]
[2020-11-02_18:19:12.835 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:19:12.835 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:19:12.893 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:19:13.661 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:19:13.720 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:19:13.721 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:19:14.189 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:19:14.190 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:19:14.190 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:19:14.236 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:19:14.283 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:19:14.515 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.7 seconds (JVM running for 9.175)]
[2020-11-02_18:19:14.715 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:19:14.749 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:19:14.749 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:19:14.749 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:19:14.750 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:19:14.802 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@5690c7f9: startup date [Mon Nov 02 18:19:07 IST 2020]; root of context hierarchy]
[2020-11-02_18:19:14.804 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:19:14.805 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:19:14.805 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:19:38.939 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:19:38.947 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:19:38.948 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:19:39.049 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:19:39.154 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:19:39.257 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:21:08.532 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:21:08.540 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:21:08.541 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:21:08.646 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:21:08.751 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:21:08.857 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7d31e7f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@773c3525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56ece5b7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@510008f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@13939815, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2263168d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7842e71, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14499729]]
[2020-11-02_18:21:09.091 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 9540 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:21:09.092 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:21:09.127 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@40b470b3: startup date [Mon Nov 02 18:21:09 IST 2020]; root of context hierarchy]
[2020-11-02_18:21:10.307 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:21:10.309 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:21:10.727 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:21:10.755 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:21:11.290 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$ebcab0e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:21:12.089 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:21:12.091 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:21:12.092 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:21:12.098 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:21:12.099 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:21:12.099 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:21:12.100 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:21:12.102 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:21:12.105 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:21:12.107 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:21:12.108 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:21:12.118 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:21:12.119 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:21:13.352 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:21:13.445 | [cluster-ClusterId{value='5fa000c15155672544339b6c', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:85}] to 127.0.0.1:27017]
[2020-11-02_18:21:13.452 | [cluster-ClusterId{value='5fa000c15155672544339b6c', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3989700}]
[2020-11-02_18:21:14.404 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:21:14.406 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:21:14.407 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:21:15.152 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:21:15.167 | [cluster-ClusterId{value='5fa000c35155672544339b6d', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:86}] to localhost:27017]
[2020-11-02_18:21:15.169 | [cluster-ClusterId{value='5fa000c35155672544339b6d', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=820200}]
[2020-11-02_18:21:15.690 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@40b470b3: startup date [Mon Nov 02 18:21:09 IST 2020]; root of context hierarchy]
[2020-11-02_18:21:15.795 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:21:15.796 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:21:15.885 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:21:17.429 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:21:18.264 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:21:18.266 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:21:18.932 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:21:18.932 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:21:18.932 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:21:18.971 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:21:19.021 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:21:19.239 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 10.352 seconds (JVM running for 11.786)]
[2020-11-02_18:21:19.492 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:21:19.521 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:21:19.522 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:21:19.522 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:21:19.522 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:21:19.580 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@40b470b3: startup date [Mon Nov 02 18:21:09 IST 2020]; root of context hierarchy]
[2020-11-02_18:21:19.583 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:21:19.584 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:21:19.584 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:22:10.964 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:22:10.972 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:22:10.973 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:22:11.074 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:22:11.206 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:22:11.316 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@773c3525, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@56ece5b7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77ec47c1, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@510008f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@13939815, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2263168d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@37a49f4f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@32b5e54c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7842e71, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@14499729, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@9cb9f69]]
[2020-11-02_18:22:11.562 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 2612 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:22:11.562 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:22:11.601 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@176a2381: startup date [Mon Nov 02 18:22:11 IST 2020]; root of context hierarchy]
[2020-11-02_18:22:12.578 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:22:12.579 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:22:12.966 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:22:12.992 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:22:13.481 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$e607a98a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:22:14.236 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:22:14.238 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:22:14.240 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:22:14.248 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:22:14.249 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:22:14.250 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:22:14.251 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:22:14.253 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:22:14.258 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:22:14.260 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:22:14.262 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:22:14.273 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:22:14.274 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:22:15.418 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:22:15.499 | [cluster-ClusterId{value='5fa000ff5155670a348dd4be', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:87}] to 127.0.0.1:27017]
[2020-11-02_18:22:15.505 | [cluster-ClusterId{value='5fa000ff5155670a348dd4be', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3679900}]
[2020-11-02_18:22:16.317 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:22:16.318 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:22:16.319 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:22:16.896 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:22:16.903 | [cluster-ClusterId{value='5fa001005155670a348dd4bf', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:88}] to localhost:27017]
[2020-11-02_18:22:16.905 | [cluster-ClusterId{value='5fa001005155670a348dd4bf', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=984900}]
[2020-11-02_18:22:17.337 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@176a2381: startup date [Mon Nov 02 18:22:11 IST 2020]; root of context hierarchy]
[2020-11-02_18:22:17.460 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:22:17.461 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:22:17.542 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:22:18.182 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:22:18.247 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:22:18.248 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:22:18.616 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:22:18.617 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:22:18.617 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:22:18.652 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:22:18.694 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:22:18.900 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.551 seconds (JVM running for 9.052)]
[2020-11-02_18:22:19.111 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:22:19.152 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:22:19.153 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:22:19.153 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:22:19.153 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:22:19.217 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@176a2381: startup date [Mon Nov 02 18:22:11 IST 2020]; root of context hierarchy]
[2020-11-02_18:22:19.219 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:22:19.221 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:22:19.221 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:22:58.558 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:22:58.566 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:22:58.566 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:22:58.665 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:22:58.767 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:22:58.871 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7a6bb17b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8792058, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6510ffd5, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2abb86f6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@d7c1ab3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4cc690a4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2e4a20be, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@58b09fb7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3574bf90, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d4f4a2a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@327fdced, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6eeeb032]]
[2020-11-02_18:22:59.111 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 5832 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:22:59.111 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:22:59.146 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@756fdff5: startup date [Mon Nov 02 18:22:59 IST 2020]; root of context hierarchy]
[2020-11-02_18:23:00.248 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:23:00.250 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:23:00.666 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:23:00.697 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:23:01.202 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$cdcdb442] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:23:01.907 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:23:01.909 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:23:01.910 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:23:01.916 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:23:01.918 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:23:01.918 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:23:01.920 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:23:01.921 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:23:01.925 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:23:01.927 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:23:01.927 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:23:01.935 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:23:01.937 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:23:03.011 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:23:03.093 | [cluster-ClusterId{value='5fa0012f51556716c8a1ef15', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:91}] to 127.0.0.1:27017]
[2020-11-02_18:23:03.098 | [cluster-ClusterId{value='5fa0012f51556716c8a1ef15', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3181500}]
[2020-11-02_18:23:03.950 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:23:03.951 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:23:03.952 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:23:04.528 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:23:04.535 | [cluster-ClusterId{value='5fa0013051556716c8a1ef16', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:92}] to localhost:27017]
[2020-11-02_18:23:04.537 | [cluster-ClusterId{value='5fa0013051556716c8a1ef16', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=840400}]
[2020-11-02_18:23:04.924 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@756fdff5: startup date [Mon Nov 02 18:22:59 IST 2020]; root of context hierarchy]
[2020-11-02_18:23:05.015 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:23:05.016 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:23:05.077 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:23:05.719 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:23:05.775 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:23:05.775 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:23:06.180 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:23:06.180 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:23:06.180 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:23:06.208 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:23:06.245 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:23:06.429 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.526 seconds (JVM running for 8.948)]
[2020-11-02_18:23:06.573 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:23:06.604 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:23:06.604 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:23:06.604 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:23:06.604 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:23:06.660 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:23:06.667 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:23:06.667 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:23:06.667 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:23:06.667 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:23:06.691 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:23:06.697 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:23:06.697 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:23:06.697 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:23:06.697 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:23:06.709 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:23:06.716 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:23:06.718 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:23:06.718 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:23:06.718 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:23:06.734 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@756fdff5: startup date [Mon Nov 02 18:22:59 IST 2020]; root of context hierarchy]
[2020-11-02_18:23:06.739 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:23:06.740 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:23:06.741 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:23:57.537 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:23:57.545 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:23:57.546 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:23:57.647 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:23:57.752 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:23:57.856 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@510008f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@13939815, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2263168d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@37a49f4f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@32b5e54c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7842e71, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@14499729, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@9cb9f69, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78528e07, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5e83d0da]]
[2020-11-02_18:23:58.097 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 5752 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:23:58.098 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:23:58.134 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@20b72087: startup date [Mon Nov 02 18:23:58 IST 2020]; root of context hierarchy]
[2020-11-02_18:23:59.217 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:23:59.218 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:23:59.624 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:23:59.650 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:24:00.157 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$be154565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:24:00.821 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:24:00.823 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:24:00.823 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:24:00.829 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:24:00.829 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:24:00.830 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:24:00.830 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:24:00.832 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:24:00.834 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:24:00.836 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:24:00.837 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:24:00.843 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:24:00.844 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:24:01.833 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:24:01.910 | [cluster-ClusterId{value='5fa001695155671678c9471c', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:99}] to 127.0.0.1:27017]
[2020-11-02_18:24:01.915 | [cluster-ClusterId{value='5fa001695155671678c9471c', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3640300}]
[2020-11-02_18:24:02.801 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:24:02.802 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:24:02.803 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:24:03.331 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:24:03.337 | [cluster-ClusterId{value='5fa0016b5155671678c9471d', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:100}] to localhost:27017]
[2020-11-02_18:24:03.338 | [cluster-ClusterId{value='5fa0016b5155671678c9471d', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=945300}]
[2020-11-02_18:24:03.787 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@20b72087: startup date [Mon Nov 02 18:23:58 IST 2020]; root of context hierarchy]
[2020-11-02_18:24:03.896 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:24:03.897 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:24:03.971 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:24:04.707 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:24:04.771 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:24:04.771 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:24:05.153 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:24:05.153 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:24:05.153 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:24:05.176 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:24:05.210 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:24:05.368 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.479 seconds (JVM running for 8.902)]
[2020-11-02_18:24:05.507 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:24:05.533 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:24:05.534 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:24:05.534 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:24:05.534 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:24:05.587 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@20b72087: startup date [Mon Nov 02 18:23:58 IST 2020]; root of context hierarchy]
[2020-11-02_18:24:05.590 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:24:05.591 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:24:05.592 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:25:51.895 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:25:51.903 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:25:51.904 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:25:52.007 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:25:52.117 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:25:52.226 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@510008f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@13939815, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2263168d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@37a49f4f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@32b5e54c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7842e71, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@14499729, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@9cb9f69, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78528e07, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5e83d0da]]
[2020-11-02_18:25:52.463 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 15168 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:25:52.464 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:25:52.500 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5bd1c072: startup date [Mon Nov 02 18:25:52 IST 2020]; root of context hierarchy]
[2020-11-02_18:25:53.632 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:25:53.633 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:25:54.054 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:25:54.085 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:25:54.634 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$8e45762c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:25:55.359 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:25:55.360 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:25:55.360 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:25:55.367 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:25:55.368 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:25:55.368 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:25:55.369 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:25:55.370 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:25:55.373 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:25:55.374 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:25:55.375 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:25:55.383 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:25:55.383 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:25:56.455 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:25:56.533 | [cluster-ClusterId{value='5fa001dc5155673b4055fce6', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:103}] to 127.0.0.1:27017]
[2020-11-02_18:25:56.538 | [cluster-ClusterId{value='5fa001dc5155673b4055fce6', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2675000}]
[2020-11-02_18:25:57.464 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:25:57.465 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:25:57.466 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:25:58.088 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:25:58.095 | [cluster-ClusterId{value='5fa001de5155673b4055fce7', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:104}] to localhost:27017]
[2020-11-02_18:25:58.096 | [cluster-ClusterId{value='5fa001de5155673b4055fce7', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=826500}]
[2020-11-02_18:25:58.600 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5bd1c072: startup date [Mon Nov 02 18:25:52 IST 2020]; root of context hierarchy]
[2020-11-02_18:25:58.734 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:25:58.735 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:25:58.805 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:25:59.626 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:25:59.709 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:25:59.709 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:00.113 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:26:00.113 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:26:00.113 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:26:00.137 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:26:00.174 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:26:00.396 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 8.139 seconds (JVM running for 9.6)]
[2020-11-02_18:26:00.542 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:00.572 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:00.572 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:00.572 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:00.572 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:00.629 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:00.642 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:00.642 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:00.642 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:00.643 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:00.660 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:00.666 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:00.666 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:00.666 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:00.666 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:00.680 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:00.686 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:00.687 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:00.687 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:00.688 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:00.703 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@5bd1c072: startup date [Mon Nov 02 18:25:52 IST 2020]; root of context hierarchy]
[2020-11-02_18:26:00.706 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:26:00.707 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:26:00.707 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_18:26:36.132 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_18:26:36.140 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_18:26:36.141 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_18:26:36.242 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_18:26:36.347 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_18:26:36.454 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@77ec47c1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@510008f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@13939815, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2263168d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@37a49f4f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@32b5e54c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3de9903f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7842e71, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@14499729, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@9cb9f69, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78528e07, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5e83d0da]]
[2020-11-02_18:26:36.695 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 10588 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_18:26:36.696 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_18:26:36.731 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5690c7f9: startup date [Mon Nov 02 18:26:36 IST 2020]; root of context hierarchy]
[2020-11-02_18:26:37.753 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:26:37.755 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_18:26:38.118 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:26:38.142 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_18:26:38.669 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$2d3a3f3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_18:26:39.373 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_18:26:39.374 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_18:26:39.375 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_18:26:39.381 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_18:26:39.381 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_18:26:39.382 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_18:26:39.383 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_18:26:39.384 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:26:39.389 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_18:26:39.389 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_18:26:39.390 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_18:26:39.398 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_18:26:39.399 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:26:40.322 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:26:40.404 | [cluster-ClusterId{value='5fa00208515567295cf09d58', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:111}] to 127.0.0.1:27017]
[2020-11-02_18:26:40.409 | [cluster-ClusterId{value='5fa00208515567295cf09d58', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3047100}]
[2020-11-02_18:26:41.253 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:26:41.254 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_18:26:41.256 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_18:26:41.776 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_18:26:41.783 | [cluster-ClusterId{value='5fa00209515567295cf09d59', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:112}] to localhost:27017]
[2020-11-02_18:26:41.784 | [cluster-ClusterId{value='5fa00209515567295cf09d59', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=719500}]
[2020-11-02_18:26:42.250 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5690c7f9: startup date [Mon Nov 02 18:26:36 IST 2020]; root of context hierarchy]
[2020-11-02_18:26:42.386 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:26:42.387 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:26:42.466 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_18:26:43.227 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_18:26:43.283 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:43.283 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:43.650 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_18:26:43.650 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_18:26:43.651 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_18:26:43.675 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_18:26:43.710 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_18:26:43.896 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 7.409 seconds (JVM running for 8.862)]
[2020-11-02_18:26:44.040 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:44.070 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:44.070 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:44.070 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:44.070 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:44.135 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:44.143 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:44.143 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:44.143 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:44.143 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:44.160 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:44.167 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:44.167 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:44.167 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:44.168 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:44.180 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_18:26:44.186 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_18:26:44.186 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_18:26:44.186 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_18:26:44.186 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_18:26:44.199 | [Thread-7] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@5690c7f9: startup date [Mon Nov 02 18:26:36 IST 2020]; root of context hierarchy]
[2020-11-02_18:26:44.201 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_18:26:44.202 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_18:26:44.203 | [Thread-7] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_21:40:43.077 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceIntegrationTest], using SpringBootContextLoader]
[2020-11-02_21:40:43.088 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceIntegrationTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_21:40:43.310 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_21:40:43.444 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@25d70e72, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@68934b7b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c3ed1c2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1832d919, org.springframework.test.context.support.DirtiesContextTestExecutionListener@50bf0f3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7731abba, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d1bc45f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@63ef22f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3939ca12, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@432fdaf4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@70a5d7f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a47b390]]
[2020-11-02_21:40:43.824 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | Starting NotificationServiceIntegrationTest on LAPTOP-L3JPKBK3 with PID 17848 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_21:40:43.827 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | No active profile set, falling back to default profiles: default]
[2020-11-02_21:40:43.860 | [Test worker] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27894b3b: startup date [Mon Nov 02 21:40:43 IST 2020]; root of context hierarchy]
[2020-11-02_21:40:45.051 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_21:40:45.052 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_21:40:45.429 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_21:40:45.458 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_21:40:46.082 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$d3cddaef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_21:40:46.485 | [Test worker] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 0 (http)]
[2020-11-02_21:40:46.502 | [Test worker] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-auto-1"]]
[2020-11-02_21:40:46.516 | [Test worker] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_21:40:46.517 | [Test worker] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_21:40:46.531 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_21:40:46.736 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_21:40:46.737 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 2882 ms]
[2020-11-02_21:40:48.064 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_21:40:48.132 | [cluster-ClusterId{value='5fa02f8829dab745b8d4baf7', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:119}] to 127.0.0.1:27017]
[2020-11-02_21:40:48.137 | [cluster-ClusterId{value='5fa02f8829dab745b8d4baf7', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3142300}]
[2020-11-02_21:40:49.019 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_21:40:49.024 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_21:40:49.025 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_21:40:49.025 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_21:40:49.025 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_21:40:49.026 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_21:40:49.026 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_21:40:49.754 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_21:40:49.756 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_21:40:49.756 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_21:40:49.762 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_21:40:49.763 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_21:40:49.764 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_21:40:49.765 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_21:40:49.767 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_21:40:49.770 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_21:40:49.771 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_21:40:49.772 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_21:40:49.775 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_21:40:49.776 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_21:40:49.903 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_21:40:49.905 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_21:40:49.906 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_21:40:50.209 | [Test worker] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet '']
[2020-11-02_21:40:50.210 | [Test worker] | INFO  | org.springframework.test.web.servlet.TestDispatcherServlet | FrameworkServlet '': initialization started]
[2020-11-02_21:40:50.286 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_21:40:50.286 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_21:40:50.321 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_21:40:50.732 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27894b3b: startup date [Mon Nov 02 21:40:43 IST 2020]; root of context hierarchy]
[2020-11-02_21:40:50.905 | [Test worker] | INFO  | org.springframework.test.web.servlet.TestDispatcherServlet | FrameworkServlet '': initialization completed in 695 ms]
[2020-11-02_21:40:50.959 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_21:40:50.967 | [cluster-ClusterId{value='5fa02f8a29dab745b8d4baf8', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:120}] to localhost:27017]
[2020-11-02_21:40:50.970 | [cluster-ClusterId{value='5fa02f8a29dab745b8d4baf8', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2229200}]
[2020-11-02_21:40:52.041 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_21:40:52.123 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_21:40:52.123 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_21:40:52.377 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_21:40:52.377 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_21:40:52.377 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_21:40:52.412 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_21:40:52.465 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_21:40:52.710 | [Test worker] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-auto-1"]]
[2020-11-02_21:40:52.713 | [Test worker] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_21:40:52.742 | [Test worker] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 54661 (http) with context path '']
[2020-11-02_21:40:52.750 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | Started NotificationServiceIntegrationTest in 9.267 seconds (JVM running for 10.894)]
[2020-11-02_21:40:53.150 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_21:40:53.205 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_21:40:53.206 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_21:40:53.206 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_21:40:53.206 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_21:40:53.434 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_21:40:53.436 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_21:40:53.438 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_21:40:53.454 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_21:40:53.457 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_21:40:53.458 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@f40a15f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@37a0380a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@644042c5, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1fa123f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15e1230b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@233739d5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4587011c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@53af4cbe, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4fcac4bb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@55a9b506, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@28dbd14e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@138b257]]
[2020-11-02_21:40:53.469 | [Thread-9] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27894b3b: startup date [Mon Nov 02 21:40:43 IST 2020]; root of context hierarchy]
[2020-11-02_21:40:53.474 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_21:40:53.475 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_21:40:53.476 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_22:16:31.400 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceIntegrationTest], using SpringBootContextLoader]
[2020-11-02_22:16:31.421 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceIntegrationTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_22:16:31.979 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_22:16:32.300 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@25d70e72, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@68934b7b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c3ed1c2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1832d919, org.springframework.test.context.support.DirtiesContextTestExecutionListener@50bf0f3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7731abba, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d1bc45f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@63ef22f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3939ca12, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@432fdaf4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@70a5d7f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a47b390]]
[2020-11-02_22:16:33.140 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | Starting NotificationServiceIntegrationTest on LAPTOP-L3JPKBK3 with PID 1152 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_22:16:33.147 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | No active profile set, falling back to default profiles: default]
[2020-11-02_22:16:33.198 | [Test worker] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6601c02b: startup date [Mon Nov 02 22:16:33 IST 2020]; root of context hierarchy]
[2020-11-02_22:16:35.439 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_22:16:35.442 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_22:16:36.249 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_22:16:36.313 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_22:16:37.647 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3f8a4859] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_22:16:38.546 | [Test worker] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 0 (http)]
[2020-11-02_22:16:38.586 | [Test worker] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-auto-1"]]
[2020-11-02_22:16:38.616 | [Test worker] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_22:16:38.618 | [Test worker] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_22:16:38.644 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_22:16:39.064 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_22:16:39.065 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 5874 ms]
[2020-11-02_22:16:42.092 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:16:42.291 | [cluster-ClusterId{value='5fa037f229dab70480ed30c6', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:125}] to 127.0.0.1:27017]
[2020-11-02_22:16:42.302 | [cluster-ClusterId{value='5fa037f229dab70480ed30c6', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7521400}]
[2020-11-02_22:16:44.244 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_22:16:44.257 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_22:16:44.258 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_22:16:44.259 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_22:16:44.259 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_22:16:44.260 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_22:16:44.261 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_22:16:45.695 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_22:16:45.698 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_22:16:45.699 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_22:16:45.711 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_22:16:45.713 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_22:16:45.714 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_22:16:45.716 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_22:16:45.718 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_22:16:45.724 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_22:16:45.727 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_22:16:45.728 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_22:16:45.736 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_22:16:45.737 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_22:16:46.029 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_22:16:46.032 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_22:16:46.036 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_22:16:46.663 | [Test worker] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet '']
[2020-11-02_22:16:46.664 | [Test worker] | INFO  | org.springframework.test.web.servlet.TestDispatcherServlet | FrameworkServlet '': initialization started]
[2020-11-02_22:16:46.822 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:16:46.822 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:16:46.894 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:16:47.736 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6601c02b: startup date [Mon Nov 02 22:16:33 IST 2020]; root of context hierarchy]
[2020-11-02_22:16:48.106 | [Test worker] | INFO  | org.springframework.test.web.servlet.TestDispatcherServlet | FrameworkServlet '': initialization completed in 1442 ms]
[2020-11-02_22:16:48.219 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:16:48.253 | [cluster-ClusterId{value='5fa037f829dab70480ed30c7', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:126}] to localhost:27017]
[2020-11-02_22:16:48.255 | [cluster-ClusterId{value='5fa037f829dab70480ed30c7', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1542500}]
[2020-11-02_22:16:50.787 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_22:16:50.941 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:16:50.941 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:16:51.377 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_22:16:51.378 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_22:16:51.378 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_22:16:51.456 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_22:16:51.577 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_22:16:52.086 | [Test worker] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-auto-1"]]
[2020-11-02_22:16:52.090 | [Test worker] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_22:16:52.124 | [Test worker] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 55557 (http) with context path '']
[2020-11-02_22:16:52.134 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceIntegrationTest | Started NotificationServiceIntegrationTest in 19.726 seconds (JVM running for 23.787)]
[2020-11-02_22:16:52.869 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_22:16:52.943 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_22:16:52.944 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_22:16:52.944 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:16:52.945 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:16:53.266 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.target.notification.test.NotificationServiceTest], using SpringBootContextLoader]
[2020-11-02_22:16:53.268 | [Test worker] | INFO  | org.springframework.test.context.support.AbstractContextLoader | Could not detect default resource locations for test class [com.target.notification.test.NotificationServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.]
[2020-11-02_22:16:53.270 | [Test worker] | INFO  | org.springframework.test.context.support.AnnotationConfigContextLoaderUtils | Could not detect default configuration classes for test class [com.target.notification.test.NotificationServiceTest]: NotificationServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.]
[2020-11-02_22:16:53.296 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Found @SpringBootConfiguration com.target.notification.Main for test class com.target.notification.test.NotificationServiceTest]
[2020-11-02_22:16:53.301 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
[2020-11-02_22:16:53.302 | [Test worker] | INFO  | org.springframework.boot.test.context.SpringBootTestContextBootstrapper | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@344cffe4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78607f53, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@f40a15f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@37a0380a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@644042c5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1fa123f9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@15e1230b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@233739d5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4587011c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@53af4cbe, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4fcac4bb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@55a9b506]]
[2020-11-02_22:16:53.407 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Starting NotificationServiceTest on LAPTOP-L3JPKBK3 with PID 1152 (started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_22:16:53.408 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | No active profile set, falling back to default profiles: default]
[2020-11-02_22:16:53.416 | [Test worker] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1c270030: startup date [Mon Nov 02 22:16:53 IST 2020]; root of context hierarchy]
[2020-11-02_22:16:54.249 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_22:16:54.250 | [Test worker] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_22:16:54.354 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_22:16:54.373 | [Test worker] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_22:16:54.613 | [Test worker] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3f8a4859] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_22:16:55.374 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_22:16:55.375 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_22:16:55.376 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_22:16:55.380 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_22:16:55.381 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_22:16:55.382 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_22:16:55.383 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_22:16:55.385 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_22:16:55.391 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_22:16:55.392 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_22:16:55.393 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_22:16:55.399 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_22:16:55.400 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_22:16:55.684 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:16:55.692 | [cluster-ClusterId{value='5fa037ff29dab70480ed30c8', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:3, serverValue:131}] to 127.0.0.1:27017]
[2020-11-02_22:16:55.694 | [cluster-ClusterId{value='5fa037ff29dab70480ed30c8', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1079300}]
[2020-11-02_22:16:56.247 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_22:16:56.247 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_22:16:56.248 | [Test worker] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_22:16:57.083 | [Test worker] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:16:57.099 | [cluster-ClusterId{value='5fa0380129dab70480ed30c9', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:4, serverValue:132}] to localhost:27017]
[2020-11-02_22:16:57.102 | [cluster-ClusterId{value='5fa0380129dab70480ed30c9', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1369000}]
[2020-11-02_22:16:57.550 | [Test worker] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1c270030: startup date [Mon Nov 02 22:16:53 IST 2020]; root of context hierarchy]
[2020-11-02_22:16:57.677 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:16:57.678 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:16:57.797 | [Test worker] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:16:58.735 | [Test worker] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_22:16:58.745 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:16:58.745 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:16:58.865 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_22:16:58.865 | [Test worker] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_22:16:58.866 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_22:16:58.868 | [Test worker] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_22:16:58.880 | [Test worker] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_22:16:58.964 | [Test worker] | INFO  | com.target.notification.test.NotificationServiceTest | Started NotificationServiceTest in 5.644 seconds (JVM running for 30.618)]
[2020-11-02_22:16:59.026 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_22:16:59.037 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_22:16:59.037 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_22:16:59.038 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:16:59.038 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:16:59.062 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_22:16:59.068 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_22:16:59.069 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_22:16:59.069 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:16:59.069 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:16:59.084 | [Test worker] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_22:16:59.090 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_22:16:59.090 | [Test worker] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_22:16:59.091 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:16:59.091 | [Test worker] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:16:59.109 | [Thread-9] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6601c02b: startup date [Mon Nov 02 22:16:33 IST 2020]; root of context hierarchy]
[2020-11-02_22:16:59.109 | [Thread-13] | INFO  | org.springframework.web.context.support.GenericWebApplicationContext | Closing org.springframework.web.context.support.GenericWebApplicationContext@1c270030: startup date [Mon Nov 02 22:16:53 IST 2020]; root of context hierarchy]
[2020-11-02_22:16:59.113 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_22:16:59.114 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_22:16:59.114 | [Thread-13] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483647]
[2020-11-02_22:16:59.114 | [Thread-9] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_22:16:59.115 | [Thread-13] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 2147483547]
[2020-11-02_22:16:59.115 | [Thread-13] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Stopping beans in phase 0]
[2020-11-02_22:17:23.173 | [main] | INFO  | com.target.notification.Main | Starting Main on LAPTOP-L3JPKBK3 with PID 2888 (C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer\build\classes\java\main started by Lenovo in C:\Users\Lenovo\Documents\NotificationSystem\notification-service\producer)]
[2020-11-02_22:17:23.188 | [main] | INFO  | com.target.notification.Main | No active profile set, falling back to default profiles: default]
[2020-11-02_22:17:23.307 | [main] | INFO  | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@38e79ae3: startup date [Mon Nov 02 22:17:23 IST 2020]; root of context hierarchy]
[2020-11-02_22:17:25.659 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'producerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=producerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_22:17:25.661 | [main] | INFO  | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'kafkaTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=kafkaConfig; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/config/KafkaConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=notificationController; factoryMethodName=kafkaTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/target/notification/web/NotificationController.class]]]
[2020-11-02_22:17:26.525 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_22:17:26.592 | [main] | INFO  | org.springframework.data.repository.config.RepositoryConfigurationDelegate | Multiple Spring Data modules found, entering strict repository configuration mode!]
[2020-11-02_22:17:27.727 | [main] | INFO  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker | Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$70349163] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)]
[2020-11-02_22:17:29.196 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 8082 (http)]
[2020-11-02_22:17:29.233 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-8082"]]
[2020-11-02_22:17:29.261 | [main] | INFO  | org.apache.catalina.core.StandardService | Starting service [Tomcat]]
[2020-11-02_22:17:29.263 | [main] | INFO  | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.28]
[2020-11-02_22:17:29.289 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Program Files\nodejs\;C:\Program Files\apache-maven-3.6.1\bin;D:\zookeeper\apache-zookeeper-3.5.6-bin\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;D:\spark\bin;C:\Users\kusha\AppData\Local\Microsoft\WindowsApps;C:\adb;C:\Program Files\PuTTY\;D:\gradle\gradle-4.10.2\bin;C:\Program Files (x86)\scala\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\Lenovo\bin;C:\Program Files\Kubernetes\Minikube;C:\ProgramData\chocolatey\bin;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Users\Lenovo\anaconda3;C:\Users\Lenovo\anaconda3\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Google\Cloud SDK\google-cloud-sdk\bin;C:\Users\Lenovo\bin;;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;.]]
[2020-11-02_22:17:29.639 | [localhost-startStop-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring embedded WebApplicationContext]
[2020-11-02_22:17:29.639 | [localhost-startStop-1] | INFO  | org.springframework.web.context.ContextLoader | Root WebApplicationContext: initialization completed in 6339 ms]
[2020-11-02_22:17:32.325 | [localhost-startStop-1] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:17:32.485 | [cluster-ClusterId{value='5fa0382429dab70b483900d5', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:1, serverValue:137}] to 127.0.0.1:27017]
[2020-11-02_22:17:32.495 | [cluster-ClusterId{value='5fa0382429dab70b483900d5', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5925900}]
[2020-11-02_22:17:34.426 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]]
[2020-11-02_22:17:34.437 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]]
[2020-11-02_22:17:34.438 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]]
[2020-11-02_22:17:34.438 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpPutFormContentFilter' to: [/*]]
[2020-11-02_22:17:34.439 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'requestContextFilter' to: [/*]]
[2020-11-02_22:17:34.439 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]]
[2020-11-02_22:17:34.440 | [localhost-startStop-1] | INFO  | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]]
[2020-11-02_22:17:35.739 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/doc],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect3()]
[2020-11-02_22:17:35.742 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect1()]
[2020-11-02_22:17:35.743 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.target.notification.swagger.SwaggerRedirectController.redirect2()]
[2020-11-02_22:17:35.756 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notify/{channelType}],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notify(com.target.notification.model.ChannelType,com.target.notification.model.Message)]
[2020-11-02_22:17:35.757 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/notifyAll],methods=[POST]}" onto public long com.target.notification.web.NotificationController.notifyAll(com.target.notification.model.Message)]
[2020-11-02_22:17:35.759 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewAll],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getAllMessages()]
[2020-11-02_22:17:35.760 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/api/v1.0/notifier/viewMessage/{channelType}],methods=[GET]}" onto public java.util.List<com.target.notification.model.Message> com.target.notification.web.NotificationController.getChannelMessages(com.target.notification.model.ChannelType)]
[2020-11-02_22:17:35.763 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2020-11-02_22:17:35.772 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()]
[2020-11-02_22:17:35.774 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()]
[2020-11-02_22:17:35.776 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()]
[2020-11-02_22:17:35.787 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
[2020-11-02_22:17:35.788 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_22:17:36.079 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_22:17:36.081 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)]
[2020-11-02_22:17:36.084 | [main] | INFO  | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]
[2020-11-02_22:17:36.889 | [main] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:17:36.899 | [cluster-ClusterId{value='5fa0382829dab70b483900d6', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:2, serverValue:138}] to localhost:27017]
[2020-11-02_22:17:36.901 | [cluster-ClusterId{value='5fa0382829dab70b483900d6', description='null'}-localhost:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1290600}]
[2020-11-02_22:17:37.615 | [main] | INFO  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@38e79ae3: startup date [Mon Nov 02 22:17:23 IST 2020]; root of context hierarchy]
[2020-11-02_22:17:37.791 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:17:37.792 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:17:37.903 | [main] | INFO  | org.springframework.web.servlet.handler.SimpleUrlHandlerMapping | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]]
[2020-11-02_22:17:39.131 | [main] | INFO  | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup]
[2020-11-02_22:17:39.195 | [main] | INFO  | org.apache.kafka.clients.admin.AdminClientConfig | AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
]
[2020-11-02_22:17:39.306 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:17:39.306 | [main] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:17:40.008 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483547]
[2020-11-02_22:17:40.008 | [main] | INFO  | org.springframework.context.support.DefaultLifecycleProcessor | Starting beans in phase 2147483647]
[2020-11-02_22:17:40.009 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Context refreshed]
[2020-11-02_22:17:40.084 | [main] | INFO  | springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper | Found 1 custom documentation plugin(s)]
[2020-11-02_22:17:40.167 | [main] | INFO  | springfox.documentation.spring.web.scanners.ApiListingReferenceScanner | Scanning for api listing references]
[2020-11-02_22:17:40.645 | [main] | INFO  | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-8082"]]
[2020-11-02_22:17:40.649 | [main] | INFO  | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read]
[2020-11-02_22:17:40.688 | [main] | INFO  | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 8082 (http) with context path '']
[2020-11-02_22:17:40.696 | [main] | INFO  | com.target.notification.Main | Started Main in 18.248 seconds (JVM running for 20.236)]
[2020-11-02_22:17:52.293 | [http-nio-8082-exec-1] | INFO  | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] | Initializing Spring FrameworkServlet 'dispatcherServlet']
[2020-11-02_22:17:52.293 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization started]
[2020-11-02_22:17:52.345 | [http-nio-8082-exec-1] | INFO  | org.springframework.web.servlet.DispatcherServlet | FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms]
[2020-11-02_22:18:48.904 | [http-nio-8082-exec-7] | INFO  | org.apache.kafka.clients.producer.ProducerConfig | ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	enable.idempotence = false
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
]
[2020-11-02_22:18:48.973 | [http-nio-8082-exec-7] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'metadata.broker.list' was supplied but isn't a known config.]
[2020-11-02_22:18:48.973 | [http-nio-8082-exec-7] | WARN  | org.apache.kafka.clients.producer.ProducerConfig | The configuration 'serializer.class' was supplied but isn't a known config.]
[2020-11-02_22:18:48.974 | [http-nio-8082-exec-7] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka version : 1.0.0]
[2020-11-02_22:18:48.974 | [http-nio-8082-exec-7] | INFO  | org.apache.kafka.common.utils.AppInfoParser | Kafka commitId : aaa7af6d4a11b29d]
[2020-11-02_22:28:23.573 | [http-nio-8082-exec-8] | INFO  | org.springframework.context.annotation.AnnotationConfigApplicationContext | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@44f0dc3: startup date [Mon Nov 02 22:28:23 IST 2020]; root of context hierarchy]
[2020-11-02_22:28:23.665 | [http-nio-8082-exec-8] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:28:23.673 | [cluster-ClusterId{value='5fa03aaf29dab70b483900d7', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:3, serverValue:155}] to 127.0.0.1:27017]
[2020-11-02_22:28:23.674 | [cluster-ClusterId{value='5fa03aaf29dab70b483900d7', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=620000}]
[2020-11-02_22:28:23.837 | [http-nio-8082-exec-8] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:4, serverValue:156}] to 127.0.0.1:27017]
[2020-11-02_22:28:36.278 | [http-nio-8082-exec-5] | INFO  | org.springframework.context.annotation.AnnotationConfigApplicationContext | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@440188e8: startup date [Mon Nov 02 22:28:36 IST 2020]; root of context hierarchy]
[2020-11-02_22:28:36.292 | [http-nio-8082-exec-5] | INFO  | org.mongodb.driver.cluster | Cluster created with settings {hosts=[127.0.0.1:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}]
[2020-11-02_22:28:36.299 | [cluster-ClusterId{value='5fa03abc29dab70b483900d8', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:5, serverValue:157}] to 127.0.0.1:27017]
[2020-11-02_22:28:36.300 | [cluster-ClusterId{value='5fa03abc29dab70b483900d8', description='null'}-127.0.0.1:27017] | INFO  | org.mongodb.driver.cluster | Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 10]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=815100}]
[2020-11-02_22:28:36.335 | [http-nio-8082-exec-5] | INFO  | org.mongodb.driver.connection | Opened connection [connectionId{localValue:6, serverValue:158}] to 127.0.0.1:27017]
